#! /bin/bash
_infer_task() {
    MODEL_PREFIX=$1
    SDK_DP=$2

    export PATH=$PATH:$HOME/opt/bin
    # assume newest modified dir named like a_b_x_y_<date>[-<variant>]
    curr_exp=$(pwd | awk -F'/' '{print $NF}')
    variant=$(echo curr_exp | awk -F'-' '{print $2}')
    version=$(date +"%m%d")
    if [[ -n ${variant} ]]; then
        model_name="${MODEL_PREFIX}_${version}v1-${variant}"
    else
        model_name="${MODEL_PREFIX}_${version}v1"
    fi
    model_hash=$(md5sum -b deploy/-1.onnx | awk '{print $1}')
    model_rlt_fp="project/resources/models/${model_name}.onnx"
    json_fp="${SDK_DP}/project/resources/sdk_settings/${MODEL_PREFIX}.json"

    cp_comm="cp deploy/-1.onnx \"${SDK_DP}/${model_rlt_fp}\""
    cfg_comm="cat \"${json_fp}\" | jq --arg model_path \"${model_rlt_fp}\" --arg md5 \"${model_hash}\" '.xrack_cfg.xrack_module.engine_cfg.model_path=\$model_path | .xrack_cfg.xrack_module.engine_cfg.md5=\$md5' > tmp.json; cp tmp.json \"${json_fp}\"; rm tmp.json"
    infer_comm="cd \"${SDK_DP}\"; pip install -r requirements.txt -i http://10.17.0.197:8181 --trusted-host 10.17.0.197; python offline_entrance.py --save_with_dir_structure -i downloads/src/test/${MODEL_PREFIX} -o downloads/dst/test_${model_name} -s 1 && rm -r downloads/dst/test_${model_name}/result_images"

    eval "$cp_comm" && eval "$cfg_comm" && eval "$infer_comm"
}

_infer_task "$1" "$2"
